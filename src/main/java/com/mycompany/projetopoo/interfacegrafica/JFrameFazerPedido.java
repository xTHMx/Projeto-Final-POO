/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projetopoo.interfacegrafica;

import com.mycompany.projetopoo.interfacegrafica.Codigo.Cliente;
import com.mycompany.projetopoo.interfacegrafica.Codigo.Item;
import com.mycompany.projetopoo.interfacegrafica.Codigo.Restaurante;
import static com.mycompany.projetopoo.interfacegrafica.JFrameLogin.jarFilePath;
import java.awt.Color;
import java.awt.Cursor;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/**
 * Janela para se escolher items para serem adicionados ao carrinho
 * @author jaoti
 */
public class JFrameFazerPedido extends javax.swing.JFrame {

    /**
     * Creates new form JFrameFazerPedido
     */
    
    private final Restaurante restaurante;
    private final Cliente cliente;
    private JPanelRestaurante jPanelRestauranteInfo;
    private final JFrameCliente jFrameCliente;

    /**
     * Metodo para carregar os Restaurantes no panel
     **/
    private void carregarDadosCardapio(){
        //Zerar o panel
        panelList.removeAll();
     
        //Variaveis para facilitar a logica
        List<Item> items =  restaurante.getListaItem(); //Pega o cardapio
        int quantidadeItems = items.size();//Quantidade de items
        
        //Loop para cada item do cardapio
        for(int i = 0;i<quantidadeItems;i++){
            Item item = items.get(i);
            JPanelItem panelItem = new JPanelItem(item,JPanelItem.Tela.CARDAPIO);
            panelList.add(panelItem);
            //Pega o botão de adicionar carrinho
            JButton btnAdd = panelItem.getAddButton();
            
            //Listener para quando o botão for pressionado
            btnAdd.addActionListener(e -> {
                if(panelItem.getQuantidade() > 0){
                    //Ao clicar no +, adiciona no carrinho
                    panelItem.getComponent(0).setBackground(new Color(184,214,160));
                    item.addToCarrinho(cliente, panelItem.getQuantidade());
                    jFrameCliente.processarMensagemCardapio(panelItem.getQuantidade());
                }
                
            });
        }
    }
    
    /**
     * Metodo para carregar os dados do restaurante no panel de info
     **/
    private void carregarRestaurante(){
        jPanelRestauranteInfo = new JPanelRestaurante(restaurante);
        jPanelRestauranteInfo.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        panelInfo.add(jPanelRestauranteInfo);
 
    }

    /**
     * Construtor da classe, inicializa o necessário para seu funcionamento
     * @param restaurante
     * @param cliente
     * @param jFrameCliente
     **/
    public JFrameFazerPedido(Restaurante restaurante, Cliente cliente,JFrameCliente jFrameCliente) {
        initComponents();
        this.setIconImage(new ImageIcon(jarFilePath + "\\imagens" + "\\" + "DefaultWindowIcon.png").getImage());
        this.restaurante = restaurante;
        this.cliente = cliente;
        this.jFrameCliente = jFrameCliente;
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(20);
        carregarRestaurante();
        carregarDadosCardapio();
        this.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLayeredPane1 = new javax.swing.JLayeredPane();
        panelInfo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelMaster = new javax.swing.JPanel();
        panelList = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setType(java.awt.Window.Type.POPUP);

        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setForeground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setOpaque(true);
        jLayeredPane1.setLayout(new java.awt.GridBagLayout());

        panelInfo.setBackground(new java.awt.Color(255, 255, 255));
        panelInfo.setForeground(new java.awt.Color(255, 255, 255));
        panelInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelInfo.setLayout(new javax.swing.BoxLayout(panelInfo, javax.swing.BoxLayout.Y_AXIS));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jLayeredPane1.add(panelInfo, gridBagConstraints);

        jScrollPane1.setBackground(new java.awt.Color(253, 232, 232));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(253, 232, 232));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportView(jPanelMaster);

        jPanelMaster.setBackground(new java.awt.Color(253, 232, 232));
        jPanelMaster.setForeground(new java.awt.Color(253, 232, 232));
        jPanelMaster.setMaximumSize(new java.awt.Dimension(500, 3000));
        jPanelMaster.setLayout(new javax.swing.BoxLayout(jPanelMaster, javax.swing.BoxLayout.PAGE_AXIS));

        panelList.setBackground(new java.awt.Color(253, 232, 232));
        panelList.setForeground(new java.awt.Color(253, 232, 232));
        panelList.setLayout(new javax.swing.BoxLayout(panelList, javax.swing.BoxLayout.Y_AXIS));
        jPanelMaster.add(panelList);

        jScrollPane1.setViewportView(jPanelMaster);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jLayeredPane1.add(jScrollPane1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrameFazerPedido(null,null,null).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanelMaster;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelInfo;
    private javax.swing.JPanel panelList;
    // End of variables declaration//GEN-END:variables
}
