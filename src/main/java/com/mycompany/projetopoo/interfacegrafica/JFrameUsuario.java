/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projetopoo.interfacegrafica;

import com.mycompany.projetopoo.interfacegrafica.Codigo.Delivery;
import com.mycompany.projetopoo.interfacegrafica.Codigo.Usuario;
import static com.mycompany.projetopoo.interfacegrafica.JFrameLogin.jarFilePath;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * JFrame que permite a edição e criação de Usuários
 * @author jaoti
 */
public class JFrameUsuario extends javax.swing.JFrame {

    
    
   //Variavel da conta
   private String imgPath;
   private Usuario user;
   private Delivery delivery;
    
    /**
     * Creates new form JFrameCadastro
     */
    public JFrameUsuario(Delivery delivery, Usuario user) {
        initComponents();
        imgPath = JFrameLogin.jarFilePath;
        this.user = user;
        this.delivery = delivery;
        carregarImagemPerfil("");
        this.setIconImage(new ImageIcon(jarFilePath + "\\imagens" + "\\" + "DefaultWindowIcon.png").getImage());
        if(user != null) carregarDados();
        
        
    }
    
    /**
     * Carrega os dados no frame
     **/
    private void carregarDados(){
        //Colocar os dados nos text fields
        txtNomeUsuario.setText(user.getNome());
        txtCpf.setText(user.getDocumento());
        txtNome.setText(user.getNomeReal());
        txtNomeUsuario.setText(user.getNome());
        pwdSenha.setText(user.getSenha());
        pwdRepetirSenha.setText(user.getSenha());
        imgPath = user.getResolvedProfilePath();
        carregarImagemPerfil(user.getResolvedProfilePath());   
    }
    
    /**
     * Abre um fileChooser para o usuario selecionar a nova imagem
     **/
    private void mudarImagemPerfil(){
        //Inicializa o fileChooser no caminho antigo
        JFileChooser fileChooser = new JFileChooser(imgPath);
        int option = fileChooser.showOpenDialog(this);
        //A pessoa selecionou a imagem
        if (option == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            //Coloca na label a imagem do path selecionado
            carregarImagemPerfil(selectedFile.getAbsolutePath());
            
            String relativePath;
            //Pegar o caminho relativo ao jar
            relativePath = new File(JFrameLogin.jarFilePath).toPath().relativize(selectedFile.toPath()).toString();
   
            //Salva o caminho na conta
            imgPath = relativePath;
        }
    }

    /**
     * Método para colocar a imagem na label
     * @param path
     **/
    private void carregarImagemPerfil(String path){
        this.lblImg.setIcon(JFrameLogin.getImageIconFromPath(path,200));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelBorda = new javax.swing.JPanel();
        jPanelMaster = new javax.swing.JPanel();
        txtNomeUsuario = new javax.swing.JTextField();
        lblNomeUsuario = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        lblCpf = new javax.swing.JLabel();
        lblSenha = new javax.swing.JLabel();
        pwdSenha = new javax.swing.JPasswordField();
        lblRepetirSenha = new javax.swing.JLabel();
        pwdRepetirSenha = new javax.swing.JPasswordField();
        btnImagemPerfil = new javax.swing.JButton();
        lblImg = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblErro = new javax.swing.JLabel();
        jCbTipo = new javax.swing.JComboBox<>();
        txtNome = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 500));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanelBorda.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10), null));
        jPanelBorda.setLayout(new javax.swing.BoxLayout(jPanelBorda, javax.swing.BoxLayout.LINE_AXIS));

        jPanelMaster.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanelMaster.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(txtNomeUsuario, gridBagConstraints);

        lblNomeUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNomeUsuario.setText("Nome Usuario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(lblNomeUsuario, gridBagConstraints);

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.setText("___.___ .___-__  ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(txtCpf, gridBagConstraints);

        lblCpf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCpf.setText("CPF:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(lblCpf, gridBagConstraints);

        lblSenha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSenha.setText("Senha:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(lblSenha, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        jPanelMaster.add(pwdSenha, gridBagConstraints);

        lblRepetirSenha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRepetirSenha.setText("Repita a Senha:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(lblRepetirSenha, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelMaster.add(pwdRepetirSenha, gridBagConstraints);

        btnImagemPerfil.setText("Selecione a Imagem de Perfil");
        btnImagemPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagemPerfilActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(btnImagemPerfil, gridBagConstraints);

        lblImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg.setText("Imagem de Perfil");
        lblImg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        lblImg.setMaximumSize(new java.awt.Dimension(300, 300));
        lblImg.setMinimumSize(new java.awt.Dimension(0, 0));
        lblImg.setPreferredSize(new java.awt.Dimension(200, 200));
        lblImg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImgMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        jPanelMaster.add(lblImg, gridBagConstraints);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(btnSalvar, gridBagConstraints);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(btnCancelar, gridBagConstraints);

        lblErro.setBackground(new java.awt.Color(255, 0, 0));
        lblErro.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblErro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(lblErro, gridBagConstraints);

        jCbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cliente", "Restaurante" }));
        jCbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbTipoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(jCbTipo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(txtNome, gridBagConstraints);

        lblNome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNome.setText("Nome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanelMaster.add(lblNome, gridBagConstraints);

        jPanelBorda.add(jPanelMaster);

        getContentPane().add(jPanelBorda);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Muda o tipo de documento baseado no tipo de usuário selecionado
     **/
    private void jCbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbTipoActionPerformed
        // TODO add your handling code here:
        //Muda a label de acordo com o tipo de usuario
        if(jCbTipo.getSelectedItem().equals("Cliente")){
            lblCpf.setText("CPF:");
        }else{
            lblCpf.setText("CNPJ:");
        }
    }//GEN-LAST:event_jCbTipoActionPerformed

    /**
     * Fecha a janela e não salva nada
     **/
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        //Fecha a janela
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Salva o Usuário, tanto edita quando adiciona um novo dependendo do caso (Upsert)
     **/
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        //Variaveis para facilitar
        String senha = String.valueOf((this.pwdSenha.getPassword()));
        String repetirSenha = String.valueOf((this.pwdRepetirSenha.getPassword()));
        //Verificar se a senha repetida é a mesma
        if(senha.equals(repetirSenha)){
            if(senha.isEmpty()) JOptionPane.showMessageDialog(this, "As senhas está vazia!", "Erro", JOptionPane.ERROR_MESSAGE);
            else{ 
                String nomeUsuario = txtNomeUsuario.getText();
                if(nomeUsuario.isEmpty()) JOptionPane.showMessageDialog(this, "O nome de Usuário está vazio!", "Erro", JOptionPane.ERROR_MESSAGE);
                else{
                    //Variaveis para ficar mais visivel a criação da conta
                    String documento = txtCpf.getText();
                    String nome = txtNome.getText();
                    if(user == null){ //Cadastra o usuário
                        if(jCbTipo.getSelectedItem().equals("Cliente")){
                            //Cadastra o cliente
                            delivery.cadastraCliente(nomeUsuario,senha,delivery.getLastCodigoCliente()+1,documento,imgPath,nome);
                        }else{
                            //Cadastra restaurante
                            delivery.cadastraRestaurante(nomeUsuario,senha,delivery.getLastCodigoRestaurante()+1,imgPath,documento,nome);
                        }
                    }else{//Edita o usuario
                        user.setSenha(senha);
                        user.setNomeReal(nome);
                        user.setNomeUsuario(nomeUsuario);
                        user.setDocumento(documento);
                        user.setProfileImgPath(imgPath);       
                    }
                    //fecha a janela
                    this.dispose();
                }
            }
        }else{
            //Se as senhas são diferentes mostra um dialog de erro
            JOptionPane.showMessageDialog(this, "As senhas são diferentes!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    /**
     * Vai para o dialog de mudar a imagem de perfil ao clicar na imagem
     **/
    private void lblImgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImgMouseClicked
        // TODO add your handling code here:
        this.mudarImagemPerfil();
    }//GEN-LAST:event_lblImgMouseClicked

    /**
     * Vai para o dialog de mudar a imagem de perfil ao clicar no botao
     **/
    private void btnImagemPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagemPerfilActionPerformed
        // TODO add your handling code here:
        this.mudarImagemPerfil();
    }//GEN-LAST:event_btnImagemPerfilActionPerformed

    /**
     * @param args the command line arguments
     * @param delivery
     * @param user
     */
    public static void main(String args[],Delivery delivery, Usuario user) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrameUsuario( delivery, user).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnImagemPerfil;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> jCbTipo;
    private javax.swing.JPanel jPanelBorda;
    private javax.swing.JPanel jPanelMaster;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblErro;
    private javax.swing.JLabel lblImg;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNomeUsuario;
    private javax.swing.JLabel lblRepetirSenha;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JPasswordField pwdRepetirSenha;
    private javax.swing.JPasswordField pwdSenha;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeUsuario;
    // End of variables declaration//GEN-END:variables
}
